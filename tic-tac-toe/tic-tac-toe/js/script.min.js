let resetButton=document.querySelector(".controlls__reset"),settingsButton=document.querySelector(".controlls__settings"),fieldItems=document.querySelectorAll(".board__item"),oTurn=document.querySelector(".turn__image_white-o"),xTurn=document.querySelector(".turn__image_white-x"),turnIndicate=document.querySelector(".turn__indicate"),gameIsLive=!0,xIsNext=!0,winner=null,draw=!0,funcCounter=0;const handleWinner=t=>{if(draw=!1,gameIsLive=!1,winner=t,"x"==winner){let t=+document.querySelector(".count__x-output").textContent;t++,document.querySelector(".count__x-output").textContent=t}else if("o"==winner){let t=+document.querySelector(".count__o-output").textContent;t++,document.querySelector(".count__o-output").textContent=t}setTimeout(()=>{for(const t of fieldItems)t.innerHTML="",t.classList.remove("x"),t.classList.remove("o");draw=!0,gameIsLive=!0,xIsNext=!0,winner=null,funcCounter=0,turnIndicate.classList.remove("o-turn"),turnIndicate.classList.add("x-turn"),oTurn.classList.remove("is-turn"),xTurn.classList.add("is-turn")},3e3)},gameStatus=()=>{const t=fieldItems[0].classList[2],e=fieldItems[1].classList[2],n=fieldItems[2].classList[2],s=fieldItems[3].classList[2],r=fieldItems[4].classList[2],o=fieldItems[5].classList[2],u=fieldItems[6].classList[2],i=fieldItems[7].classList[2],c=fieldItems[8].classList[2];funcCounter++,t&&t===e&&t===n?handleWinner(t):s&&s===r&&s===o?handleWinner(s):u&&u===i&&u===c?handleWinner(u):t&&t===s&&t===u?handleWinner(t):e&&e===r&&e===i?handleWinner(e):n&&n===o&&n===c?handleWinner(n):t&&t===r&&t===c?handleWinner(t):n&&n===r&&n==u&&handleWinner(n)},handlerReset=t=>{for(const t of fieldItems)t.innerHTML="",t.classList.remove("x"),t.classList.remove("o");gameIsLive=!0,xIsNext=!0,winner=null,draw=!0,funcCounter=0,document.querySelector(".count__x-output").textContent=0,document.querySelector(".count__o-output").textContent=0,document.querySelector(".count__draws-output").textContent=0,turnIndicate.classList.remove("o-turn"),turnIndicate.classList.add("x-turn"),oTurn.classList.remove("is-turn"),xTurn.classList.add("is-turn")},handleCellClick=t=>{t.target.classList[1];const e=t.target.classList;if("x"!==e[2]&&"o"!==e[2])if(xIsNext){if(t.target.innerHTML='<img src="./img/x.png">',t.target.classList.add("x"),turnIndicate.classList.toggle("o-turn"),turnIndicate.classList.toggle("x-turn"),oTurn.classList.toggle("is-turn"),xTurn.classList.toggle("is-turn"),gameStatus(),9==funcCounter&&1==draw){let t=+document.querySelector(".count__draws-output").textContent;t++,document.querySelector(".count__draws-output").textContent=t,setTimeout(()=>{for(const t of fieldItems)t.innerHTML="",t.classList.remove("x"),t.classList.remove("o");draw=!0,gameIsLive=!0,xIsNext=!0,winner=null,funcCounter=0,turnIndicate.classList.remove("o-turn"),turnIndicate.classList.add("x-turn"),oTurn.classList.remove("is-turn"),xTurn.classList.add("is-turn")},3e3)}xIsNext=!xIsNext}else{if(t.target.innerHTML='<img src="./img/rec.png">',t.target.classList.add("o"),turnIndicate.classList.toggle("o-turn"),turnIndicate.classList.toggle("x-turn"),oTurn.classList.toggle("is-turn"),xTurn.classList.toggle("is-turn"),gameStatus(),9==funcCounter&&1==draw){let t=+document.querySelector(".count__draws-output").textContent;t++,document.querySelector(".count__draws-output").textContent=t,setTimeout(()=>{for(const t of fieldItems)t.innerHTML="",t.classList.remove("x"),t.classList.remove("o");draw=!0,gameIsLive=!0,xIsNext=!0,winner=null,funcCounter=0,turnIndicate.classList.remove("o-turn"),turnIndicate.classList.add("x-turn"),oTurn.classList.remove("is-turn"),xTurn.classList.add("is-turn")},3e3)}xIsNext=!xIsNext}};resetButton.addEventListener("click",handlerReset);for(const t of fieldItems)t.addEventListener("click",handleCellClick);